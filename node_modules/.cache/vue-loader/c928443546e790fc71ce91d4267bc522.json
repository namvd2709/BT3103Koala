{"remainingRequest":"/Users/namvu/Downloads/final-career-planning-application/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/namvu/Downloads/final-career-planning-application/src/components/jobs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/namvu/Downloads/final-career-planning-application/src/components/jobs.vue","mtime":1555257651020},{"path":"/Users/namvu/Downloads/final-career-planning-application/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/namvu/Downloads/final-career-planning-application/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/namvu/Downloads/final-career-planning-application/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport VueChartkick from \"vue-chartkick\";\nimport Chart from \"chart.js\";\nimport { db } from \"../config\";\n\nVue.use(VueChartkick, { adapter: Chart });\n\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      job: \"\"\n    };\n  },\n\n  firebase: {\n    // we should use async await here\n    roles: {\n      source: db.ref(\"jobs\"),\n      asObject: true\n    }\n  },\n  created() {\n    this.route = this.$route.params;\n    this.major = this.$route.params.id;\n    this.industry = this.$route.params.id2;\n  },\n  methods: {\n    GetByMajor: function(roles, major, industry) {\n      if (roles[major] === undefined) {\n        return;\n      } else if (roles[major][industry] === undefined) {\n        return;\n      } else {\n        return roles[major][industry];\n      }\n    },\n    GoToRoute: function() {\n      this.$router.push({\n        name: \"IndvJobs\",\n        params: { id: this.job, id2: this.industry, id3: this.major }\n      });\n    },\n    GetJobList: function(roles, major, industry) {\n      if (roles[major] === undefined) {\n        return;\n      } else if (roles[major][industry] === undefined) {\n        return;\n      } else {\n        let result = Object.keys(roles[major][industry]);\n        return result;\n      }\n    }\n  }\n};\n",{"version":3,"sources":["jobs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"jobs.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div :style=\"{'background-image': 'url(' + require('../assets/NUS_Background_3.png') + ')', 'height': '1000px'}\">\n  <header>\n    <h1>Recommended Jobs</h1>\n  </header>\n  <body id=\"app\">\n    <div>\n      <!-- .Technology is currently hardcoded.-->\n      <pie-chart :data=\"GetByMajor(roles, major, industry)\"></pie-chart>\n\n      <br>Explore jobs:\n      <br>\n      <br>\n      <form>\n        <select name=\"job\" v-model=\"job\">\n          <option v-for=\"job1 in GetJobList(roles, major, industry)\" selected :value=\"job1\" v-bind:key=\"job1\">{{job1}}</option>\n          <!--         <option value=\"Data Analyst\">Data Analyst</option>\n          <option value=\"Software Engineer\">Software Engineer</option>\n          <option value=\"IT Consultant\">IT Consultant</option>\n          <option value=\"Information Security Officer\">Information Security Officer</option>\n          -->\n        </select>\n        <br>\n        <input type=\"button\" value=\"Let's GO\" @click=\"GoToRoute();\">\n      </form>\n    </div>\n  </body>\n</div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport VueChartkick from \"vue-chartkick\";\nimport Chart from \"chart.js\";\nimport { db } from \"../config\";\n\nVue.use(VueChartkick, { adapter: Chart });\n\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      job: \"\"\n    };\n  },\n\n  firebase: {\n    // we should use async await here\n    roles: {\n      source: db.ref(\"jobs\"),\n      asObject: true\n    }\n  },\n  created() {\n    this.route = this.$route.params;\n    this.major = this.$route.params.id;\n    this.industry = this.$route.params.id2;\n  },\n  methods: {\n    GetByMajor: function(roles, major, industry) {\n      if (roles[major] === undefined) {\n        return;\n      } else if (roles[major][industry] === undefined) {\n        return;\n      } else {\n        return roles[major][industry];\n      }\n    },\n    GoToRoute: function() {\n      this.$router.push({\n        name: \"IndvJobs\",\n        params: { id: this.job, id2: this.industry, id3: this.major }\n      });\n    },\n    GetJobList: function(roles, major, industry) {\n      if (roles[major] === undefined) {\n        return;\n      } else if (roles[major][industry] === undefined) {\n        return;\n      } else {\n        let result = Object.keys(roles[major][industry]);\n        return result;\n      }\n    }\n  }\n};\n</script>\n\n\n\n\n\n"]}]}